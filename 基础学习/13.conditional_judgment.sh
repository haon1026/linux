#!/bin/bash

#条件判断
#两种方式：test 和 [  ]，中括号两侧要有空格

#1.按照文件类型进行判断
# -d 判断该文件是否存在，并且是否为目录文件
# -e 判断该文件是否存在
# -f 判断该文件是否存在，并且是否为普通文件

test -f student.txt && echo "yes" || echo "no"
[ -d /root ] && echo "yes" || echo "no"


#2.按照文件权限进行判断
# -r 判断该文件是否存在，并且是否拥有读权限 (只能判断有无读权限，无法辨别具体是哪个身份u/g/o)
# -w . . . . . . . . . . . . . . . . 写 . .
# -x . . . . . . . . . . . . . . . . 执行 .

[ -w student.txt ] && echo "yes" || "no"


#3.两个文件之间进行比较
# 文件1 -nt 文件2 判断文件1的修改时间是否比文件2的新
# 文件1 -ot 文件2 判断文件1的修改时间是否比文件2的旧
# 文件1 -ef 文件2 判断文件1是否和文件2的Inode号一致，可以理解为两个文件是否为同一文件。用于判断硬链接是很好的办法
ln student.txt temp.txt
[ student.txt -ef temp.txt ] && echo "yes" || echo "no"


#4.两个整数之间比较
# 整数1 -eq 整数2  相等为真
# 整数1 -ne 整数2  不相等为真
# 整数1 -gt 整数2  大于为真
# 整数1 -lt 整数2  小于为真
# 整数1 -ge 整数2  大于等于为真
# 整数1 -le 整数2  小于等于为真

[ 23 -ge 22 ] && echo "yes" || echo "no"
[ 23 -le 22 ] && echo "yes" || echo "no" 


#5.字符串的判断
# -z 字符串 字符串为空返回真
# -n 字符串 字符串非空返回真
#字串1==字串2 两个字串相等返回真
#字串1!=字串2 两个字串不相等返回真

name=zhangsan
[ -z "$name" ] && echo "yes" || echo "no"
[ -z "$text" ] && echo "yes" || echo "no"

aa=11
bb=22
[ "$aa"=="$bb" ] && echo "yes" || echo "no"
# "=="两边不加空格输出的是yes
[ "$aa" == "$bb" ] && echo "yes" || echo "no"
# "=="两边加空格输出的是no


#6.多重条件判断
# 判断1 -a 判断2 逻辑与，两个判断都成立为真
# 判断1 -o 判断2 逻辑或，两个判断只要有一个成立就为真
# !判断	         逻辑非，使原始的判断式取反

cc=33
[ -n "$cc" -a "$cc" -gt 23 ] && echo "yes" || echo "no"
[ -z "$cc" -a "$cc" -gt 23 ] && echo "yes" || echo "no"
