#!/bin/bash

# sed 轻量级流编辑器，主要用来将数据进行选取、替换、删除、新增的命令
# sed [选项] ‘动作’ 文件名
# 选项：
# -n : 一般sed命令会把所有数据都输出到屏幕，如果加入此选择，则只会把经过sed命令处理的行输出到屏幕
# -e : 允许对输入数据应用多条sed命令编辑
# -i : 用sed的修改结果直接修改读取数据的文件，而不是由屏幕输出
#
# 动作：
# a\ : 追加，在当前行后添加一行或多行。添加多行时，除最后一行外，每行末尾需要用”\“代表数据未完结
# c\ : 行替换，用c后面的字符串替换原数据行。替换多行时...
# i\ ：插入，在当前行前插入一行或多行。插入多行时...
# d  : 删除，删除指定的行
# p  : 打印，输出指定的行
# s  : 字串替换，用一个字符串替换另外一个字符串。格式为”行范围s/旧字串/新字串/g“ (类似vim的替换)


sed '2p' student.txt
echo -e '---------------------'
#输出第二行，而且会把所有数据再输出一遍

sed -n '2p' student.txt
echo -e '---------------------'
#只输出第二行

df -h | sed -n '2p'
echo -e '---------------------'

sed '2,3d' student.txt
echo -e '---------------------'
#删除第二行和第三行的数据，但不修改文件本身

sed '2a hello' student.txt
echo -e '---------------------'
#在第二行后追加hello

#sed '2i hello \ 
#> world' student.txt
#echo -e '---------------------'
#在第二行前插入两行数据
#这个多行插入得在命令行测试，\表示行未结束 >提示继续输入

sed '3c no person' student.txt
#echo -e '---------------------'
#第三行替换成该字符串

sed '4s/95/60/g' student.txt
#echo -e '---------------------'
#第四行的95替换成60

sed -i '4s/95/60/g' student.txt
#echo -e '---------------------'
#把sed操作的数据写入文件

sed -e 's/张三//g; s/李四//g' student.txt
#把张三和李四替换为空
